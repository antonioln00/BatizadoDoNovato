// <auto-generated />
using System;
using BatizadoDoNovato.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BatizadoDoNovato.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BatizadoDoNovato.Entities.Login", b =>
                {
                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.ToTable("Logins");
                });

            modelBuilder.Entity("BatizadoDoNovato.Entities.Produto", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codigo"));

                    b.Property<decimal?>("MargemReal")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal?>("Markup")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("PrecoCusto")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<decimal?>("PrecoVenda")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.HasKey("Codigo");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("BatizadoDoNovato.Entities.ProdutoRegraImposto", b =>
                {
                    b.Property<int>("ProdutoCodigo")
                        .HasColumnType("int");

                    b.Property<int>("RegraImpostoCodigo")
                        .HasColumnType("int");

                    b.HasKey("ProdutoCodigo", "RegraImpostoCodigo");

                    b.HasIndex("RegraImpostoCodigo");

                    b.ToTable("ProdutosRegrasImposto");
                });

            modelBuilder.Entity("BatizadoDoNovato.Entities.RegraImposto", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codigo"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Taxa")
                        .HasMaxLength(3)
                        .HasColumnType("int");

                    b.HasKey("Codigo");

                    b.ToTable("RegrasImposto");
                });

            modelBuilder.Entity("BatizadoDoNovato.Entities.ProdutoRegraImposto", b =>
                {
                    b.HasOne("BatizadoDoNovato.Entities.Produto", "Produto")
                        .WithMany("ProdutosRegrasImpostos")
                        .HasForeignKey("ProdutoCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BatizadoDoNovato.Entities.RegraImposto", "RegraImposto")
                        .WithMany("ProdutosRegrasImpostos")
                        .HasForeignKey("RegraImpostoCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");

                    b.Navigation("RegraImposto");
                });

            modelBuilder.Entity("BatizadoDoNovato.Entities.Produto", b =>
                {
                    b.Navigation("ProdutosRegrasImpostos");
                });

            modelBuilder.Entity("BatizadoDoNovato.Entities.RegraImposto", b =>
                {
                    b.Navigation("ProdutosRegrasImpostos");
                });
#pragma warning restore 612, 618
        }
    }
}
